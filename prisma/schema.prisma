// Using Prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(cuid())
  name             String?
  email            String         @unique
  emailVerified    DateTime?
  image            String?
  hashedPassword   String?
  role             String         @default("USER")
  accounts         Account[]
  sessions         Session[]
  stripeCustomerId String?        @unique
  subscriptions    Subscription[]
  licenses         License[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model License {
  id        String    @id @default(cuid())
  key       String    @unique
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  productId String
  type      String // perpetual, subscription
  status    String // active, revoked
  expiresAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String
  user                 User     @relation(fields: [userId], references: [id])
  stripeSubscriptionId String   @unique
  status               String
  currentPeriodEnd     DateTime
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}
